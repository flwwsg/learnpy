data	system\echo-client.py	/^	data = sockobj.recv(1024)$/;"	v
message	system\echo-client.py	/^		message = (x.encode() for x in sys.argv[2:])$/;"	v
message	system\echo-client.py	/^message = [b'Hello network world']$/;"	v
serverHost	system\echo-client.py	/^	serverHost = sys.argv[1]$/;"	v
serverHost	system\echo-client.py	/^serverHost = 'localhost'$/;"	v
serverPort	system\echo-client.py	/^serverPort = 50007$/;"	v
sockobj	system\echo-client.py	/^sockobj = socket(AF_INET, SOCK_STREAM)$/;"	v
sys	system\echo-client.py	/^import sys$/;"	i
data	system\echo-server.py	/^		data = connection.recv(1024)$/;"	v
myHost	system\echo-server.py	/^myHost =''$/;"	v
myPort	system\echo-server.py	/^myPort = 50007$/;"	v
sockobj	system\echo-server.py	/^sockobj = socket(AF_INET, SOCK_STREAM)$/;"	v
child	system\fork1.py	/^def child():$/;"	f
os	system\fork1.py	/^import os$/;"	i
parent	system\fork1.py	/^def parent():$/;"	f
more	system\more.py	/^def more(text, numlines=15):$/;"	f
sys	system\more.py	/^	import sys$/;"	i
Thread	system\socket_preview-progs.py	/^from threading import Thread$/;"	i
client	system\socket_preview-progs.py	/^from socket_preview import server, client$/;"	i
mode	system\socket_preview-progs.py	/^mode =int(sys.argv[1])$/;"	v
os	system\socket_preview-progs.py	/^import sys, os$/;"	i
server	system\socket_preview-progs.py	/^from socket_preview import server, client$/;"	i
sys	system\socket_preview-progs.py	/^import sys, os$/;"	i
AF_INET	system\socket_preview.py	/^from socket import socket, AF_INET, SOCK_STREAM$/;"	i
SOCK_STREAM	system\socket_preview.py	/^from socket import socket, AF_INET, SOCK_STREAM$/;"	i
Thread	system\socket_preview.py	/^	from threading import Thread$/;"	i
client	system\socket_preview.py	/^def client(name):$/;"	f
host	system\socket_preview.py	/^host = 'localhost'$/;"	v
port	system\socket_preview.py	/^port = 50008$/;"	v
server	system\socket_preview.py	/^def server():$/;"	f
socket	system\socket_preview.py	/^from socket import socket, AF_INET, SOCK_STREAM$/;"	i
sthread	system\socket_preview.py	/^	sthread = Thread(target = server)$/;"	v
adder	system\thread-add-random.py	/^def adder():$/;"	f
count	system\thread-add-random.py	/^count = 0$/;"	v
threading	system\thread-add-random.py	/^import threading, time$/;"	i
threads	system\thread-add-random.py	/^threads = []$/;"	v
time	system\thread-add-random.py	/^import threading, time$/;"	i
counter	system\thread-count-wait2.py	/^def counter(myId, count):$/;"	f
exitmutexes	system\thread-count-wait2.py	/^exitmutexes = [False] * 10$/;"	v
stdoutmutex	system\thread-count-wait2.py	/^stdoutmutex = thread.allocate_lock()$/;"	v
thread	system\thread-count-wait2.py	/^import _thread as thread$/;"	i
counter	system\thread-count-wait3.py	/^def counter(myId, count, mutex):$/;"	f
exitmutexes	system\thread-count-wait3.py	/^exitmutexes = [thread.allocate_lock() for i in range(numthreads)]$/;"	v
numthreads	system\thread-count-wait3.py	/^numthreads = 5$/;"	v
stdoutmutex	system\thread-count-wait3.py	/^stdoutmutex = thread.allocate_lock()$/;"	v
thread	system\thread-count-wait3.py	/^import _thread as thread, time$/;"	i
time	system\thread-count-wait3.py	/^import _thread as thread, time$/;"	i
counter	system\thread-count.py	/^def counter(myId, count):$/;"	f
thread	system\thread-count.py	/^import _thread as thread, time$/;"	i
time	system\thread-count.py	/^import _thread as thread, time$/;"	i
_thread	system\thread1.py	/^import _thread$/;"	i
child	system\thread1.py	/^def child(tid):$/;"	f
parent	system\thread1.py	/^def parent():$/;"	f
Power	system\threadpower.py	/^class Power():$/;"	c
__init__	system\threadpower.py	/^	def __init__(self, i):$/;"	m	class:Power
action	system\threadpower.py	/^	def action(self):$/;"	m	class:Power
obj	system\threadpower.py	/^obj = Power(2)$/;"	v
threading	system\threadpower.py	/^import threading$/;"	i
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_PROGRAM_VERSION	5.8	//
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
